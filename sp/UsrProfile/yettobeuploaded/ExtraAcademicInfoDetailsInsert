CREATE OR REPLACE FUNCTION ExtraAcademicInfoDetailsInsert(
_User_id integer,
_Title varchar,
_Start timestamp without time zone,
_End timestamp without time zone,
_Organisation varchar,
_Designation varchar,
_Details varchar,
_PlaceOfWork varchar,
_FunctionalArea varchar,
_ExtraAcadmicInfoType_id integer,
_References varchar,
_Summary varchar,
RequestedOperation VARCHAR,
by_user INTEGER,
ip VARCHAR,
OUT result INTEGER,
OUT rescode INTEGER
) RETURNS RECORD AS $$
DECLARE 
    temp INTEGER;
    varrec RECORD;
BEGIN 
temp := 0;


IF EXISTS ( SELECT id FROM "UserProfile_extraacademicinfodetails" WHERE "User_id"=_User_id and "Start"=_Start and "Organisation"=_Organisation and "Title" =_Title) THEN
	result := 2;
  	rescode := 161;
	RETURN;
END IF;

SELECT * INTO varrec FROM CheckUserForPermission(by_user,RequestedOperation,'extraacademicinfodetails','UserProfile');
IF varrec.result <> 1 THEN
	rescode :=  varrec.rescode;
	result := -2;
	RETURN;
END IF;

INSERT INTO "UserProfile_extraacademicinfodetails"(
             "User_id", "Title", "Start", "End", "Organisation", "Designation", 
            "Details", "PlaceOfWork", "FunctionalArea", "ExtraAcadmicInfoType_id", 
            "State_id", "References", "Summary")
    VALUES (_User_id, _Title, _Start, _End, _Organisation, _Designation, 
            _Details, _PlaceOfWork, _FunctionalArea, _ExtraAcadmicInfoType_id, 
            varrec.varsci, _References, _Summary);

GET DIAGNOSTICS temp := ROW_COUNT;
IF temp <> 1 THEN 
	rescode := 162;
	result := -1;
        RETURN;
END IF;

SELECT id INTO rescode FROM "UserProfile_extraacademicinfodetails" WHERE "User_id"=_User_id and "Start"=_Start and "Organisation"=_Organisation;


INSERT INTO "UserProfile_userprofilelogs"("LogsUser_id", "ContentType_id", "LogsObject", "LogsPermission_id", "LogsIP", "LogsTimeStamp", "LogsDescription","LogsPreviousState")
VALUES (by_user,varrec.var_ctid,rescode,varrec.varpci,ip,now(),'INSERT','NULL-Inserting Value');
GET DIAGNOSTICS temp := ROW_COUNT;
IF temp <> 1 THEN 
	rescode := 999;
	result := -1;
        RETURN;
ELSE
	result := 1;
RETURN;
END IF;
END;
$$ LANGUAGE plpgsql;


